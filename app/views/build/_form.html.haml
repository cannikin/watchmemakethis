= form_for build, :url => submit_path do |form| 
  = render :partial => 'shared/form_errors', :locals => { :object => build }
  
  = form.label :name, '<span class="icon">W</span> Build Name'.html_safe, :id => 'build_name_label'
  = form.text_field :name
  %span.example Something like <em>Bedroom Nightstand</em> or <em>John Doe's Entertainment Center</em>
  = form.label :path, '<span class="icon">j</span> Build URL'.html_safe
  
  .inline
    %span http://watchmemakethis.com/#{@site.path}/
    = form.text_field :path
  %span.example A unique URL that points to this build. We will auto-generate this based on your Build Name, but you are free to change it. Shorter is usually better.
  
  = form.label :hashtag, '<span class="icon hashtag">B</span> Twitter/Email Hashtag'.html_safe
  .inline.hashtag  
    %span #
    = form.text_field :hashtag
  
  %span.example 
    If you are going to use Twitter or email to send images to this build, use this hashtag. We will auto-generate this based on your Build Name, but you are free to change it. Shorter is usually better.
    = link_to 'How does this work?', help_path(:anchor => 'whats-a-hashtag'), :target => '_blank'
    
  %label
    %span(class="icon hashtag") 0
    Image Order
  .inline.radio
    = form.radio_button :image_order, 'desc'
    = label_tag :build_image_order_desc, 'Newest images first'
  %span.example This layout works great when you're in the process of building&mdash;visitors will see the newest photos at the top of the page.
  
  .inline.radio
    = form.radio_button :image_order, 'asc'
    = label_tag :build_image_order_asc, 'Oldest images first'
  %span.example This layout makes sense once your build is complete&mdash;visitors see your photos in the order you posted them and can watch the project progressing from top to bottom.
  
  = form.submit button_label, :class => 'button blue large'
  
  - if show_delete
    = link_to 'Delete Build', destroy_build_path, :class => 'button red delete', :confirm => 'Are you sure? Any images in this build will be deleted as well!', :method => :delete
  
  